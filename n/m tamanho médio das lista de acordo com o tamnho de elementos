{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMmfmN0LsFeRocNmQDddeWc",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/lbritors/AED2/blob/main/n/m%20tamanho%20m%C3%A9dio%20das%20lista%20de%20acordo%20com%20o%20tamnho%20de%20elementos\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "yKtmeeqfT-bq"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "3ekQpQJKQS1V"
      },
      "outputs": [],
      "source": [
        "def inserir_n_aleatorios(m, aleatorios):\n",
        "  th = [ [] for i in range(m)]\n",
        "  for rn in aleatorios:\n",
        "    h = rn % m\n",
        "    if rn not in th[h]:\n",
        "      th[h].append(rn)\n",
        "  #print(th)\n",
        "  return th\n",
        "\n",
        "def tam_medio(th):\n",
        "  tam = list(map(len, th))\n",
        "  return np.mean(tam), np.std(tam)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "t = inserir_n_aleatorios(7, [20, 14, 7, 0, 1])"
      ],
      "metadata": {
        "id": "3yymkfdERwV_"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(t)\n",
        "print( list(map(len, t)) )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7023H9wCWRw6",
        "outputId": "b32d9ed4-1ae3-4002-a748-f4330d30c7f9"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[14, 7, 0], [1], [], [], [], [], [20]]\n",
            "[3, 1, 0, 0, 0, 0, 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ms = [500, 499]\n",
        "ns = [100000]\n",
        "\n",
        "random.seed(1)\n",
        "\n",
        "for n in ns: \n",
        "  aleatorios = []\n",
        "  for i in range(n): \n",
        "    aleatorios.append(random.randint(0, 10*n))\n",
        "    \n",
        "  for m in ms:\n",
        "    plt.figure()\n",
        "    th = inserir_n_aleatorios(m, aleatorios)\n",
        "\n",
        "    media, desvio = tam_medio(th)\n",
        "\n",
        "    titulo = \"tamanho médio = %.2f +- %.2f\" % (media, desvio)\n",
        "    plt.title(titulo)\n",
        "\n",
        "   #plt.bar(range(m), list(map(len, th)))\n",
        "   #plt.axhline(media, color= \"red\")\n",
        "    p10, p90 = np.quantile(list(map(len, th)), [0.1, 0.9])\n",
        "\n",
        "    plt.hist(list(map(len, th)), 20)\n",
        "    plt.axvline(p10, color='purple')\n",
        "    plt.axvline(p90, color='purple')\n",
        "    plt.ylabel(\"Número de listas\")\n",
        "    plt.xlabel(\"Tamanho da lista\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "id": "qiHmVsCfUJXv",
        "outputId": "ebeb2cbe-b859-4cbf-d08c-0d699a6fff66"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "JICYyy_QXefI"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}